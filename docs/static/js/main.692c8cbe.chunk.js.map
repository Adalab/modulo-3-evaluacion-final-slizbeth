{"version":3,"sources":["images/logo.png","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/Search.js","components/Header.js","components/App.js","services/api.js","index.js"],"names":["module","exports","CharacterCard","props","characterImage","characterName","characterSpecies","className","src","alt","CharacterList","allCharacteres","value","filter","character","name","toLowerCase","includes","map","key","id","to","image","species","CharacterDetail","undefined","status","origin","episode","length","Search","onSubmit","event","preventDefault","type","placeholder","onChange","evt","getInputValue","target","Header","logo","App","state","renderCharacterDetail","bind","this","setState","match","params","find","parseInt","fetch","then","response","json","data","results","path","exact","render","React","Component","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.692c8cbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n    const {characterImage, characterName, characterSpecies} = props;\n    return <>\n        <img className=\"card__img\" src={characterImage} alt={characterName}/>\n        <h4>{characterName}</h4>\n        <p>{characterSpecies}</p>\n    </>\n}\n// Así definimos las propTypes\nCharacterCard.propTypes = {\n    characterImage: PropTypes.string,\n    characterName: PropTypes.string,\n    characterSpecies: PropTypes.string\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = props => {\n    const {allCharacteres, value} = props;\n    return <ul className=\"character__list\">\n        {allCharacteres\n            .filter(character => value === '' || character.name.toLowerCase()\n            .includes(value.toLowerCase()))\n            .map((character) => <li className=\"character__li\" key={character.id}>\n            <Link className=\"character__link\" to={`/character/${character.id}`} >\n                <CharacterCard\n                    characterImage ={character.image}\n                    characterName = {character.name}\n                    characterSpecies = {character.species}\n                />\n            </Link>\n        </li>)}\n    </ul>\n}\n\n// Así definimos las propTypes\nCharacterList.propTypes = {\n    allCharacteres: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n    if(props.character !== undefined){\n        const { image, name, status, species, origin, episode } = props.character;\n        return <>\n            <Link className=\"character__link\" to='/'>\n                <span className=\"detail_back\"><i className=\"fas fa-hand-point-left\"></i></span>\n            </Link>\n            <div className=\"character__detail\">\n                <img className=\"detail__img\" src={image} alt={name}/>\n                <div className=\"detail__info\">\n                    <h1>{name}</h1>\n                    <p>Status: {status === 'Alive' ? <i className=\"fas fa-heartbeat icon_alive\"></i> : <i className=\"fas fa-skull-crossbones icon_dead\"></i>}</p>\n                    <p>Species: {species === 'Human' ? <i className=\"fas fa-baby\"></i> : <i className=\"fab fa-reddit-alien icon_alien\"></i>}</p>\n                    <p>Origin: {origin.name}</p>\n                    <p>Episodes: {episode.length}</p>\n                </div>\n            </div>  \n            </>  \n    } else {\n        return(\n            <p>Ups...problemas técnicos, lo siento...</p>\n        )\n    }\n}\n\nCharacterDetail.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    status: PropTypes.string,\n    species: PropTypes.string,\n    origin: PropTypes.number,\n    episode: PropTypes.string,\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = props => {\n    const {value} = props;\n    const getInputValue = evt => {\n        props.getInputValue(evt.target.value)\n    }\n\n    const onSubmitHandler = event => {\n        event.preventDefault()\n    };\n    \n    return <div>\n         <form onSubmit={onSubmitHandler}>\n            <label>\n                <input className=\"form__input\" type=\"text\" placeholder='Introduce tu personaje&#x1f50e;' onChange={getInputValue} name=\"character\" value={value}/>\n            </label>\n        </form>\n    </div>\n}\n\n// Así definimos las propTypes\nSearch.propTypes = {\n    value: PropTypes.string.isRequired\n};\n\nexport default Search;","import React from 'react';\nimport logo from '../images/logo.png'\n\nconst Header = () => {\n    return <header>\n       <img className=\"header__img\" src={logo} alt=\"logo\"/> \n    </header>\n}\n\nexport default Header;","import React from 'react';\nimport '../stylesheets/App.scss';\nimport {fetchCharacters} from '../services/api.js';\nimport CharacterList from './CharacterList'\nimport CharacterDetail from './CharacterDetail'\nimport Search from './Search';\nimport {Route, Switch } from 'react-router-dom';\nimport Header from './Header'\n \nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCharacteres: [],\n      value: '',\n      \n    };\n    \n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.getInputValue = this.getInputValue.bind(this);\n  }\n\n  getInputValue(value){\n    this.setState({\n      value: value\n    })\n  }\n\n  renderCharacterDetail (props) {\n    const id = props.match.params.id;\n    const character = this.state.allCharacteres.find(character => character.id === parseInt(id));\n    return <CharacterDetail character={character}/>\n  }\n  \n  componentDidMount() {\n    fetchCharacters()\n    .then(data => {\n      this.setState({\n        allCharacteres: data.results\n      })\n   })\n  }\n\n  render() {\n    const {value, allCharacteres} = this.state;\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Switch>       \n          <Route path=\"/\" exact>\n            <Search\n              getInputValue= {this.getInputValue}\n              value= {value}\n            />\n            <CharacterList \n              allCharacteres= {allCharacteres}\n              value= {value}\n            />\n          </Route>\n          <Route path=\"/character/:id\" render={this.renderCharacterDetail}></Route>\n        </Switch>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n// const SINGLECHARACTER = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchCharacters = () => fetch(ENDPOINT).then(response => response.json());\n//const fetchIdCharacter = (id) => fetch(SINGLECHARACTER+id).then(response => response.json());\nexport { fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter basename=\"/modulo-3-evaluacion-final-slizbeth\"> \n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n"],"sourceRoot":""}